#wiremock:
#  server:
#    baseUrl: http://localhost:${wiremock.server.port}
spring:
  main:
    allow-bean-definition-overriding: true
#  security:
#    oauth2:
#      resourceserver:
#        jwt:
#          jwk-set-uri: ${wiremock.server.baseUrl}/jwk.json
#          issuer-uri: ${wiremock.server.baseUrl}/issuer.json
  liquibase:
    enabled: false
  flyway:
    enabled: false
  servlet:
    multipart:
      max-file-size: 5MB
      max-request-size: 5MB
  jpa:
    hibernate:
      naming:
        physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
    properties:
      hibernate:
        format_sql: true
    show-sql: true

  mail:
    host: smtp.strato.de
    port: 587
    username: Thalestransport.webshop@protostellar.eu
    password: 2a-PPk$stuM5
    protocol: smtp
    tls: true
    properties.mail.smtp:
      starttls.enable: true
      starttls.required: true
      auth: true
      ssl.trust: smtp.strato.de

zonky:
  test:
    database:
      postgres:
        docker:
          image: "postgres:10.13-alpine" # Docker image containing PostgreSQL database for test

jobs:
  cronSchedule: "59 59 23 31 DEC *"
  alarmCronSchedule: "59 59 23 31 DEC *"

nanonet:
  api-key: FAKE_NANONET_API_KEY
  model-id: FAKE_NANONET_MODEL_ID

openalpr:
  secret-key: FAKE_OPENALPR_SECRET_KEY
  api-url: FAKE_OPENALPR_API_URL

logging:
  level:
    org:
      springframework:
        #        jdbc:
        #          core: TRACE
        security: INFO

management:
  endpoints:
    web:
      exposure:
        include: "*"

server:
  servlet:
    context-path: /api
  compression:
    enabled: true
    mime-types: application/json
    min-response-size: 1024


decorator:
  datasource:
    datasource-proxy:
      logging: slf4j
      query.enable-logging: true
      query.log-level: debug
      slow-query.enable-logging: true
      slow-query.log-level: warn
      slow-query.threshold: 300
      multiline: true
      json-format: false
      count-query: false

app:
  information-notice-filename: ${INFORMATION_NOTICE_FILENAME:"information_notice.pdf"}
  user-guide-filename: ${USER_GUIDE_FILENAME:"1Logistics_userguide.pdf"}
  origin: http://localhost:3000
  pointer-password: ${POINTER_PASSWORD:""}
  user-group-id: ${USER_GROUP_ID:""}

azure.application-insights.instrumentation-key: ""
azure.application-insights.enabled: false
spring.application.name: "1logistics-backend"

azure:
  activedirectory:
    active-directory-groups: PRTS_ADMIN, PRTS_USER, Users
    tenant-id: ${AZURE_TENANT_ID:""}
    client-id: ${AZURE_CLIENT_ID:""}
    client-secret: ${BACKEND_CLIENT_SECRET:""}
    session-stateless: false
    user-group:
      allowed-groups: PRTS_ADMIN, PRTS_USER, Users
